#version 330 core

layout(location = 0) in vec3 aPos;

uniform mat4 projection;
uniform mat4 view;

vec3 hardcodedVertices[44] = vec3[](
    // H-Lines
    vec3(-10.0, 0.0, -10.0), vec3( 10.0, 0.0, -10.0),
    vec3(-10.0, 0.0,  -8.0), vec3( 10.0, 0.0,  -8.0),
    vec3(-10.0, 0.0,  -6.0), vec3( 10.0, 0.0,  -6.0),
    vec3(-10.0, 0.0,  -4.0), vec3( 10.0, 0.0,  -4.0),
    vec3(-10.0, 0.0,  -2.0), vec3( 10.0, 0.0,  -2.0),
    vec3(-10.0, 0.0,   0.0), vec3( 10.0, 0.0,   0.0),
    vec3(-10.0, 0.0,   2.0), vec3( 10.0, 0.0,   2.0),
    vec3(-10.0, 0.0,   4.0), vec3( 10.0, 0.0,   4.0),
    vec3(-10.0, 0.0,   6.0), vec3( 10.0, 0.0,   6.0),
    vec3(-10.0, 0.0,   8.0), vec3( 10.0, 0.0,   8.0),
    vec3(-10.0, 0.0,  10.0), vec3( 10.0, 0.0,  10.0),

    // V-Lines
    vec3(-10.0, 0.0, -10.0), vec3(-10.0, 0.0,  10.0),
    vec3( -8.0, 0.0, -10.0), vec3( -8.0, 0.0,  10.0),
    vec3( -6.0, 0.0, -10.0), vec3( -6.0, 0.0,  10.0),
    vec3( -4.0, 0.0, -10.0), vec3( -4.0, 0.0,  10.0),
    vec3( -2.0, 0.0, -10.0), vec3( -2.0, 0.0,  10.0),
    vec3(  0.0, 0.0, -10.0), vec3(  0.0, 0.0,  10.0),
    vec3(  2.0, 0.0, -10.0), vec3(  2.0, 0.0,  10.0),
    vec3(  4.0, 0.0, -10.0), vec3(  4.0, 0.0,  10.0),
    vec3(  6.0, 0.0, -10.0), vec3(  6.0, 0.0,  10.0),
    vec3(  8.0, 0.0, -10.0), vec3(  8.0, 0.0,  10.0),
    vec3( 10.0, 0.0, -10.0), vec3( 10.0, 0.0,  10.0)
);

void main()
{
    gl_Position = projection * view * vec4(hardcodedVertices[gl_VertexID], 1.0);
} 